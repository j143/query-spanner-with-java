# This is a basic workflow to help you get started with Actions

name: Spanner test with emulator

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # Service containers or container jobs are available in Linux environment only
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      emulator:
        # Docker image
        image: gcr.io/cloud-spanner-emulator/emulator:1.2.0
        #
        ports:
          # Opens tcp port 6379 on the host and service container
          - 9010:9010
          - 9020:9020

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Build with Maven
        run: mvn -B package --file spanner-with-java/pom.xml
        
      - name: Set up gcloud Cloud SDK environment
        # You may pin to the exact commit or the version.
        # uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        uses: google-github-actions/setup-gcloud@v0.2.0
#         with:
          # Version of the gcloud SDK to install. If unspecified or set to "latest",
          # the latest available gcloud SDK version for the target platform will be
          # installed. Example: "290.0.1".
#           version: # optional, default is latest
          # Service account email address to use for authentication. This is required
          # for legacy .p12 keys but can be omitted for .json keys. This is usually of
          # the format <name>@<project-id>.iam.gserviceaccount.com.
#           service_account_email: # optional
          # Service account key to use for authentication. This should be the JSON
          # formatted private key which can be exported from the Cloud Console. The
          # value can be raw or base64-encoded.
#           service_account_key: # optional
          # ID of the Google Cloud project. If provided, this will configure gcloud to
          # use this project ID by default for commands. Individual commands can still
          # override the project using the --project flag which takes precedence.
#           project_id: # optional
          # Export the provided credentials as Google Default Application Credentials.
          # This will make the credentials available to later steps via the
          # GOOGLE_APPLICATION_CREDENTIALS environment variable. Future steps that
          # consume Default Application Credentials will automatically detect and use
          # these credentials.
#           export_default_credentials: # optional
      
      

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
        

      # https://cloud.google.com/spanner/docs/emulator#using_the_gcloud_cli_with_the_emulator
      - run: gcloud info
      - run: |
          gcloud config configurations create emulator
          gcloud config set auth/disable_credentials true
          gcloud config set project spanner-lab-project
          gcloud config set api_endpoint_overrides/spanner http://localhost:9020/
          
      - run: gcloud spanner instances create cloudspanner-lab --config=emulator-config --description="Test Instance"  --nodes=1
      - run: gcloud spanner instances list
      - run: java -jar spanner-with-java/target/spanner-with-java-1.0-SNAPSHOT-jar-with-dependencies.jar
        env:
          SPANNER_EMULATOR_HOST: localhost:9010
      
